version: "3.9"

services:
  api_01: &api
    build: ./api
    restart: unless-stopped
    hostname: api_01
    environment:
      - DB_HOSTNAME=db
      - PORT=8080
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "120MB"
  api_02:
    <<: *api
    hostname: api_02
  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api_01
      - api_02
    ports:
      - 9999:9999
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "10MB"

  # O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
  # A edição anterior se beneficiou do modo host pois o volume de requisições
  # era relativamente alto e a virtualização da rede se tornou um gargalo, mas
  # este modo é mais complexo de ser configurado. Fique à vontade para usar o
  # modo que quiser desde que não conflite com portas trivialmente usadas em um
  # SO.

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "1"
          memory: "300MB"
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
